_version: 2.0
metadata:
- name: "FORMAT"
  value: "1A"
- name: "HOST"
  value: "http://api.ents24.com"
name: "Ents24 REST API (Beta 1)"
description: "The Ents24 REST API gives you easy access to the the UK's most comprehensive live entertainment database:  \nA horde of event-listing experts add over 10,000 new listings every week!  \nEasily use our data for your website or application.  \n\nLicensing [**terms and conditions**](https://www.ents24.com/developers/licensing) apply.\n\n"
resourceGroups:
- name: "Event"
  description: "Available actions on the event resource.\n\n"
  resources:
  - name: "Genres"
    description: "A list of all valid event genres.\n\n"
    uriTemplate: "/event/genres"
    model:
    parameters:
    actions:
    - name: "Event Genres"
      description:
      method: "GET"
      parameters:
      examples:
      - name:
        description:
        requests:
        - name:
          description:
          headers:
          - name: "Authorization"
            value: "qnFqFAVw8pJMCF1z8tIMYoXwommArRmt9C08jIRA"
          - name: "Cache-Control"
            value: "no-cache"
          body:
          schema:
        responses:
        - name: "200"
          description:
          headers:
          - name: "Content-Type"
            value: "application/json"
          - name: "Date"
            value: "Tue, 26 Aug 2014 08:00:00 GMT"
          - name: "Expires"
            value: "Tue, 26 Aug 2014 09:00:00 GMT"
          - name: "Last-Modified"
            value: "Tue, 25 Aug 2014 22:10:00 GMT"
          body: "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Event Genres\",\n  \"description\": \"A list of valid event genres\",\n  \"type\": \"array\",\n  \"items\": {\n    \"type\": \"string\"\n  }\n}\n"
          schema:
  - name: "List"
    description: "Multiple event objects with selected fields.\n\n"
    uriTemplate: "/event/list?location={location}&type={type}&genre={genre}&date={date}&date_from={date_from}&date_to={date_to}&venue={venue}&venue_id={venue_id}&artist={artist}&artist_id={artist_id}&results_per_page={results_per_page}&page={page}&incl_image={incl_image}&full_description={full_description}&updated_since={updated_since}"
    model:
    parameters:
    actions:
    - name: "Event List"
      description:
      method: "GET"
      parameters:
      - name: "location"
        description: "The location of events you want a listing for."
        type: "string"
        required: false
        default:
        example: "London"
        values:
      - name: "genre"
        description: "The genre of event type you want listed."
        type: "string"
        required: false
        default:
        example: "rock"
        values:
      - name: "date"
        description: "A specific date you want an events listing for.<br />***NB:*** *This parameter is disregarded if `date_from` and `date_to` parameters are set in the same request*."
        type: "date"
        required: false
        default:
        example: "2014-09-03"
        values:
      - name: "date_from"
        description: "The date you want an events listing from.<br />***NB:*** *This parameter is required when `date_to` parameter is set.*"
        type: "date"
        required: false
        default:
        example: "2014-09-03"
        values:
      - name: "date_to"
        description: "The date you want an events listing to.<br />***NB:*** *This parameter is required when `date_from` parameter is set.*"
        type: "date"
        required: false
        default:
        example: "2014-09-10"
        values:
      - name: "venue"
        description: "The venue you want an events listing for."
        type: "string"
        required: false
        default:
        example: "Hyde Park"
        values:
      - name: "venue_id"
        description: "The unique identifier for a venue you want an events listing for."
        type: "string"
        required: false
        default:
        example: "lRx9"
        values:
      - name: "artist"
        description: "The artist you want an events listing for."
        type: "string"
        required: false
        default:
        example: "Blondie"
        values:
      - name: "artist_id"
        description: "The unique identifier for an artist you want an events listing for."
        type: "string"
        required: false
        default:
        example: "njyZ"
        values:
      - name: "results_per_page"
        description: "The number of results you want per page/chunk [25, 50, 100]."
        type: "integer"
        required: false
        default:
        example: "25"
        values:
      - name: "page"
        description: "The page/chunk of results to be requested."
        type: "integer"
        required: false
        default:
        example: "1"
        values:
      - name: "incl_image"
        description: "Decides whether or not an event image is included in the response."
        type: "boolean"
        required: false
        default:
        example: "1"
        values:
      - name: "full_description"
        description: "Decides whether full or summarised description text is included in the response."
        type: "boolean"
        required: false
        default:
        example: "0"
        values:
      - name: "updated_since"
        description: "Only retrive events that have been added/updated since the given date."
        type: "date"
        required: false
        default:
        example: "2014-08-31"
        values:
      examples:
      - name:
        description:
        requests:
        - name:
          description:
          headers:
          - name: "Authorization"
            value: "qnFqFAVw8pJMCF1z8tIMYoXwommArRmt9C08jIRA"
          - name: "Cache-Control"
            value: "no-cache"
          body:
          schema:
        responses:
        - name: "200"
          description:
          headers:
          - name: "Content-Type"
            value: "application/json"
          - name: "Date"
            value: "Tue, 26 Aug 2014 08:00:00 GMT"
          - name: "Expires"
            value: "Tue, 26 Aug 2014 09:00:00 GMT"
          - name: "Last-Modified"
            value: "Tue, 25 Aug 2014 22:10:00 GMT"
          - name: "X-Current-Page"
            value: "2"
          - name: "X-Next-Page"
            value: "https://api.ents24.com/event/list?...&page=3"
          - name: "X-Previous-Page"
            value: "https://api.ents24.com/event/list?...&page=1"
          - name: "X-Total-Items-Found"
            value: "75"
          - name: "X-Total-Pages"
            value: "3"
          body: "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Event Collection\",\n  \"description\": \"A list of Event objects with selected fields\",\n  \"type\": \"array\",\n  \"items\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"id\": {\n        \"description\": \"Unique identifier for the event\",\n        \"type\": \"string\"\n      },\n      \"title\": {\n            \"description\": \"Title of the event\",\n            \"type\": \"string\"\n        },\n        \"venue\": {\n          \"description\": \"Venue the event is being held at\",\n          \"type\": \"object\",\n            \"properties\": {\n                \"id\": {\n                    \"description\": \"Unique identifier for the venue\",\n                    \"type\": \"string\"\n                },\n                \"name\": {\n                    \"description\": \"Name of the venue\",\n                    \"type\": \"string\"\n                },\n                \"town\": {\n            \"description\": \"Town or city where the venue is located\",\n            \"type\": \"string\"\n          },\n                \"location\": {\n                    \"description\": \"Lat/Lon coordinates of the venue\",\n                    \"$ref\": \"http://json-schema.org/geo\"\n                }\n            },\n            \"required\": [\"id\", \"name\", \"town\"]\n        },\n        \"startDateTime\": {\n          \"description\": \"RFC-3339 formatted start date and time the event\",\n          \"type\": \"string\"\n        },\n        \"endDateTime\": {\n          \"description\": \"RFC-3339 formatted end date and time the event\",\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"description\": \"Description text for the event\",\n          \"type\": \"string\"\n        },\n        \"image\": {\n            \"description\": \"Single image asset for the event\",\n            \"type\": \"object\",\n              \"properties\": {\n                  \"url\": {\n                      \"description\": \"Image source URL\",\n                      \"type\": \"string\"\n                  },\n                  \"width\": {\n                      \"description\": \"Image width\",\n                      \"type\": \"integer\"\n                  },\n                  \"height\": {\n                      \"description\": \"Image height\",\n                      \"type\": \"integer\"\n                  },\n                  \"metadata\": {\n                      \"description\": \"Metadata related to this image\",\n                      \"type\": \"object\",\n                      \"properties\": {\n                          \"copyright\": {\n                              \"description\": \"The copyright holder for this image\",\n                              \"type\": \"string\"\n                          },\n                          \"caption\": {\n                              \"description\": \"Caption text for this image\",\n                              \"type\": \"string\"\n                          }\n                      },\n                      \"required\": [\"copyright\", \"caption\"]\n                  }\n              },\n              \"required\": [\"metadata\", \"url\", \"width\", \"height\"]\n      },\n          \"webLink\": {\n              \"description\": \"URL for the web page for the event on ents24.com\",\n              \"type\": \"string\"\n          }\n    },\n    \"required\": [\"id\", \"title\", \"startDateTime\", \"endDateTime\", \"description\", \"webLink\"]\n  }\n}\n"
          schema:
        - name: "204"
          description:
          headers:
          - name: "Date"
            value: "Tue, 26 Aug 2014 08:00:00 GMT"
          - name: "X-Total-Items-Found"
            value: "0"
          - name: "X-Total-Pages"
            value: "0"
          body:
          schema:
  - name: "Read"
    description: "An event object with all fields.\n\n"
    uriTemplate: "/event/read?id={id}&incl_artists={incl_artists}&incl_images={incl_images}&incl_tickets={incl_tickets}&full_description={full_description}"
    model:
    parameters:
    actions:
    - name: "Event"
      description:
      method: "GET"
      parameters:
      - name: "id"
        description: "Unique identifier string of the Event you want full details for."
        type: "string"
        required: true
        default:
        example: "mDDaoO"
        values:
      - name: "incl_artists"
        description: "Decides whether or not a list of performing artists is included in the response."
        type: "boolean"
        required: false
        default:
        example: "1"
        values:
      - name: "incl_images"
        description: "Decides whether or not an event images are included in the response."
        type: "boolean"
        required: false
        default:
        example: "1"
        values:
      - name: "incl_tickets"
        description: "Decides whether or not a list of available tickets is included in the response."
        type: "boolean"
        required: false
        default:
        example: "1"
        values:
      - name: "full_description"
        description: "Decides whether full or summarised description text is included in the response."
        type: "boolean"
        required: false
        default:
        example: "1"
        values:
      examples:
      - name:
        description:
        requests:
        - name:
          description:
          headers:
          - name: "Authorization"
            value: "qnFqFAVw8pJMCF1z8tIMYoXwommArRmt9C08jIRA"
          - name: "Cache-Control"
            value: "no-cache"
          body:
          schema:
        responses:
        - name: "200"
          description:
          headers:
          - name: "Content-Type"
            value: "application/json"
          - name: "Date"
            value: "Tue, 26 Aug 2014 08:00:00 GMT"
          - name: "Expires"
            value: "Tue, 26 Aug 2014 09:00:00 GMT"
          - name: "Last-Modified"
            value: "Tue, 25 Aug 2014 22:10:00 GMT"
          - name: "X-Current-Page"
            value: "1"
          - name: "X-Total-Items-Found"
            value: "1"
          - name: "X-Total-Pages"
            value: "1"
          body: "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Event\",\n  \"description\": \"A single Event object with all fields\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"description\": \"Unique identifier for the event\",\n      \"type\": \"string\"\n    },\n    \"title\": {\n          \"description\": \"Title of the event\",\n          \"type\": \"string\"\n      },\n      \"venue\": {\n        \"description\": \"Venue the event is being held at\",\n        \"type\": \"object\",\n          \"properties\": {\n              \"id\": {\n                  \"description\": \"Unique identifier for the venue\",\n                  \"type\": \"string\"\n              },\n              \"name\": {\n                  \"description\": \"Name of the venue\",\n                  \"type\": \"string\"\n              },\n              \"town\": {\n                  \"description\": \"Town or city where the venue is located\",\n                  \"type\": \"string\"\n              },\n              \"location\": {\n                  \"description\": \"Lat/Lon coordinates of the venue\",\n                  \"$ref\": \"http://json-schema.org/geo\"\n              }\n          },\n          \"required\": [\"id\", \"name\", \"town\"]\n      },\n      \"startDateTime\": {\n        \"description\": \"RFC-3339 formatted start date and time the event\",\n        \"type\": \"string\"\n      },\n      \"endDateTime\": {\n        \"description\": \"RFC-3339 formatted end date and time the event\",\n        \"type\": \"string\"\n      },\n      \"description\": {\n        \"description\": \"Description text for the event\",\n        \"type\": \"string\"\n      },\n      \"artists\": {\n        \"description\": \"Featured artists\",\n        \"type\": \"array\",\n        \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"description\": \"Unique identifier for a featured artist\",\n                  \"type\": \"string\"\n              },\n              \"name\": {\n                \"description\": \"Name of a featured artist\",\n                  \"type\": \"string\"\n              }\n              },\n              \"required\": [\"id\", \"name\"]\n          }\n      },\n   \"image\": {\n          \"description\": \"Multiple image assets for the event\",\n          \"type\": \"object\",\n          \"properties\": {\n              \"small\": {\n                  \"description\": \"Small sized image\",\n                  \"type\": \"object\",\n                  \"properties\": {\n                      \"url\": {\n                          \"description\": \"Image source URL\",\n                          \"type\": \"string\"\n                      },\n                      \"width\": {\n                          \"description\": \"Image width\",\n                          \"type\": \"integer\"\n                      },\n                      \"height\": {\n                          \"description\": \"Image height\",\n                          \"type\": \"integer\"\n                      }\n                  },\n                  \"required\": [\"url\", \"width\", \"height\"]\n              },\n              \"medium\": {\n                  \"description\": \"Medium sized image\",\n                  \"type\": \"object\",\n                  \"properties\": {\n                      \"url\": {\n                          \"description\": \"Image source URL\",\n                          \"type\": \"string\"\n                      },\n                      \"width\": {\n                          \"description\": \"Image width\",\n                          \"type\": \"integer\"\n                      },\n                      \"height\": {\n                          \"description\": \"Image height\",\n                          \"type\": \"integer\"\n                      }\n                  },\n                  \"required\": [\"url\", \"width\", \"height\"]\n              },\n              \"large\": {\n                  \"description\": \"Medium sized image\",\n                  \"type\": \"object\",\n                  \"properties\": {\n                      \"url\": {\n                          \"description\": \"Image source URL\",\n                          \"type\": \"string\"\n                      },\n                      \"width\": {\n                          \"description\": \"Image width\",\n                          \"type\": \"integer\"\n                      },\n                      \"height\": {\n                          \"description\": \"Image height\",\n                          \"type\": \"integer\"\n                      }\n                  },\n                  \"required\": [\"url\", \"width\", \"height\"]\n              },\n              \"metadata\": {\n                  \"description\": \"Metadata related to this image\",\n                  \"type\": \"object\",\n                  \"properties\": {\n                      \"copyright\": {\n                          \"description\": \"The copyright holder for this image\",\n                          \"type\": \"string\"\n                      },\n                      \"caption\": {\n                          \"description\": \"Caption text for this image\",\n                          \"type\": \"string\"\n                      }\n                  },\n                  \"required\": [\"copyright\", \"caption\"]\n              }\n          }\n   },\n     \"genre\": {\n          \"description\": \"The genre(s) this event is found under\",\n          \"type\": \"array\",\n          \"items\": {\n              \"type\": \"string\"\n          }\n      },\n      \"tickets\": {\n          \"description\": \"The genre(s) this event is found under\",\n          \"type\": \"array\",\n          \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                  \"supplier\": {\n\n                  },\n                  \"price\": {\n\n                  },\n                  \"dateTime\": {\n\n                  },\n                  \"url\": {\n\n                  },\n                  \"onSaleFrom\": {\n\n                  },\n                  \"onSaleUntil\": {\n\n                  }\n              },\n              \"required\": [\"supplier\", \"price\", \"dateTime\", \"onSaleUntil\"]\n          }\n      },\n      \"webLink\": {\n          \"description\": \"URL for the web page for the event on ents24.com\",\n          \"type\": \"string\"\n      }\n  },\n  \"required\": [\"id\", \"title\", \"startDateTime\", \"endDateTime\", \"description\", \"webLink\"]\n}\n"
          schema:
  - name: "Image"
    description: "An event image retrieved as either a JSON object or JPEG image.\n\n"
    uriTemplate: "/event/image?id={id}&size={size}&format={format}"
    model:
    parameters:
    actions:
    - name: "Event Image"
      description:
      method: "GET"
      parameters:
      - name: "id"
        description: "Unique identifier string of the Event you want an image for."
        type: "string"
        required: true
        default:
        example: "mDDaoO"
        values:
      - name: "size"
        description: "Size of image you want [small, medium, large]."
        type: "string"
        required: false
        default:
        example: "medium"
        values:
      - name: "format"
        description: "The format of the response you want back from the resource [json, jpeg]."
        type: "string"
        required: false
        default:
        example: "json"
        values:
      examples:
      - name:
        description:
        requests:
        - name:
          description:
          headers:
          - name: "Authorization"
            value: "qnFqFAVw8pJMCF1z8tIMYoXwommArRmt9C08jIRA"
          - name: "Cache-Control"
            value: "no-cache"
          body:
          schema:
        responses:
        - name: "200"
          description:
          headers:
          - name: "Content-Type"
            value: "application/json"
          - name: "Date"
            value: "Tue, 26 Aug 2014 08:00:00 GMT"
          - name: "Expires"
            value: "Tue, 26 Aug 2014 09:00:00 GMT"
          - name: "Last-Modified"
            value: "Tue, 25 Aug 2014 22:10:00 GMT"
          - name: "X-Current-Page"
            value: "1"
          - name: "X-Total-Items-Found"
            value: "1"
          - name: "X-Total-Pages"
            value: "1"
          body: "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Event Image\",\n  \"description\": \"An image asset for an event\",\n  \"type\": \"object\",\n  \"properties\": {\n      \"url\": {\n          \"description\": \"Image source URL\",\n          \"type\": \"string\"\n      },\n      \"width\": {\n          \"description\": \"Image width\",\n          \"type\": \"integer\"\n      },\n      \"height\": {\n          \"description\": \"Image height\",\n          \"type\": \"integer\"\n      },\n      \"metadata\": {\n          \"description\": \"Metadata related to this image\",\n          \"type\": \"object\",\n          \"properties\": {\n              \"copyright\": {\n                  \"description\": \"The copyright holder for this image\",\n                  \"type\": \"string\"\n              },\n              \"caption\": {\n                  \"description\": \"Caption text for this image\",\n                  \"type\": \"string\"\n              }\n          },\n          \"required\": [\"copyright\", \"caption\"]\n      }\n  },\n  \"required\": [\"url\", \"width\", \"height\", \"metadata\"]\n}\n"
          schema:
- name: "Artist"
  description: "Available actions on the artist resource.\n\n"
  resources:
  - name: "List"
    description: "Multiple artist objects with selected fields.\n\n"
    uriTemplate: "/artist/list?genre={genre}&event={event}&event_id={event_id}&results_per_page={results_per_page}&page={page}&incl_image={incl_image}&full_description={full_description}&updated_since={updated_since}"
    model:
    parameters:
    actions:
    - name: "Artist List"
      description:
      method: "GET"
      parameters:
      - name: "genre"
        description: "The genre of artist you want listed."
        type: "string"
        required: false
        default:
        example: "rock"
        values:
      - name: "event"
        description: "The name for an event you want an artists listing for."
        type: "string"
        required: false
        default:
        example: "BBC Radio 2 Live In Hyde Park"
        values:
      - name: "event_id"
        description: "The unique identifier for an event you want an artists listing for."
        type: "string"
        required: false
        default:
        example: "mDDaoO"
        values:
      - name: "results_per_page"
        description: "The number of results you want per page/chunk [25, 50, 100]."
        type: "integer"
        required: false
        default:
        example: "25"
        values:
      - name: "page"
        description: "The page/chunk of results to be requested."
        type: "integer"
        required: false
        default:
        example: "1"
        values:
      - name: "incl_image"
        description: "Decides whether or not an artist image is included in the response."
        type: "boolean"
        required: false
        default:
        example: "1"
        values:
      - name: "full_description"
        description: "Decides whether full or summarised description text is included in the response."
        type: "boolean"
        required: false
        default:
        example: "0"
        values:
      - name: "updated_since"
        description: "Only retrive artists that have been added/updated since the given date."
        type: "date"
        required: false
        default:
        example: "YYYY-MM-DD"
        values:
      examples:
      - name:
        description:
        requests:
        - name:
          description:
          headers:
          - name: "Authorization"
            value: "qnFqFAVw8pJMCF1z8tIMYoXwommArRmt9C08jIRA"
          - name: "Cache-Control"
            value: "no-cache"
          body:
          schema:
        responses:
        - name: "200"
          description:
          headers:
          - name: "Content-Type"
            value: "application/json"
          - name: "Date"
            value: "Tue, 26 Aug 2014 08:00:00 GMT"
          - name: "Expires"
            value: "Tue, 26 Aug 2014 09:00:00 GMT"
          - name: "Last-Modified"
            value: "Tue, 25 Aug 2014 22:10:00 GMT"
          - name: "X-Current-Page"
            value: "2"
          - name: "X-Next-Page"
            value: "https://api.ents24.com/event/list?...&page=3"
          - name: "X-Previous-Page"
            value: "https://api.ents24.com/event/list?...&page=1"
          - name: "X-Total-Items-Found"
            value: "75"
          - name: "X-Total-Pages"
            value: "3"
          body: "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Artist Collection\",\n  \"description\": \"A list of Artist objects with selected fields\",\n  \"type\": \"array\",\n  \"items\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"id\": {\n        \"description\": \"Unique identifier for the artist\",\n        \"type\": \"string\"\n      },\n      \"name\": {\n            \"description\": \"Name of the artist\",\n            \"type\": \"string\"\n        },\n        \"description\": {\n          \"description\": \"Description text for the artist\",\n          \"type\": \"string\"\n        },\n        \"image\": {\n              \"description\": \"Single image asset for the artist\",\n              \"type\": \"object\",\n              \"properties\": {\n                  \"url\": {\n                      \"description\": \"Image source URL\",\n                      \"type\": \"string\"\n                  },\n                  \"width\": {\n                      \"description\": \"Image width\",\n                      \"type\": \"integer\"\n                  },\n                  \"height\": {\n                      \"description\": \"Image height\",\n                      \"type\": \"integer\"\n                  },\n                  \"metadata\": {\n                      \"description\": \"Metadata related to this image\",\n                      \"type\": \"object\",\n                      \"properties\": {\n                          \"copyright\": {\n                              \"description\": \"The copyright holder for this image\",\n                              \"type\": \"string\"\n                          },\n                          \"caption\": {\n                              \"description\": \"Caption text for this image\",\n                              \"type\": \"string\"\n                          }\n                      },\n                      \"required\": [\"copyright\", \"caption\"]\n                  }\n              }\n          },\n          \"webLink\": {\n              \"description\": \"URL for the web page for the artist on ents24.com\",\n              \"type\": \"string\"\n          }\n    },\n    \"required\": [\"id\", \"name\", \"description\", \"webLink\"]\n  }\n}\n"
          schema:
        - name: "204"
          description:
          headers:
          - name: "Date"
            value: "Tue, 26 Aug 2014 08:00:00 GMT"
          - name: "X-Total-Items-Found"
            value: "0"
          - name: "X-Total-Pages"
            value: "0"
          body:
          schema:
  - name: "Read"
    description: "An artist object with all fields.\n\n"
    uriTemplate: "/artist/read?id={id}&incl_events={incl_events}&incl_image={incl_images}&full_description={full_description}"
    model:
    parameters:
    actions:
    - name: "Artist"
      description:
      method: "GET"
      parameters:
      - name: "id"
        description: "Unique identifier string of the Artist you want full details for."
        type: "string"
        required: true
        default:
        example: "oKkO"
        values:
      - name: "incl_events"
        description: "Decides whether or not a list of events the artists is performing at is included in the response."
        type: "boolean"
        required: false
        default:
        example: "1"
        values:
      - name: "incl_images"
        description: "Decides whether or not an artist images are included in the response."
        type: "boolean"
        required: false
        default:
        example: "1"
        values:
      - name: "full_description"
        description: "Decides whether full or summarised description text is included in the response."
        type: "boolean"
        required: false
        default:
        example: "1"
        values:
      examples:
      - name:
        description:
        requests:
        - name:
          description:
          headers:
          - name: "Authorization"
            value: "qnFqFAVw8pJMCF1z8tIMYoXwommArRmt9C08jIRA"
          - name: "Cache-Control"
            value: "no-cache"
          body:
          schema:
        responses:
        - name: "200"
          description:
          headers:
          - name: "Content-Type"
            value: "application/json"
          - name: "Date"
            value: "Tue, 26 Aug 2014 08:00:00 GMT"
          - name: "Expires"
            value: "Tue, 26 Aug 2014 09:00:00 GMT"
          - name: "Last-Modified"
            value: "Tue, 25 Aug 2014 22:10:00 GMT"
          - name: "X-Current-Page"
            value: "1"
          - name: "X-Total-Items-Found"
            value: "1"
          - name: "X-Total-Pages"
            value: "1"
          body: "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Artist\",\n  \"description\": \"A single Artist object with all fields\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"description\": \"Unique identifier for the artist\",\n      \"type\": \"string\"\n    },\n    \"name\": {\n          \"description\": \"Name of the artist\",\n          \"type\": \"string\"\n      },\n      \"description\": {\n        \"description\": \"Description text for the artist\",\n        \"type\": \"string\"\n      },\n      \"events\": {\n        \"description\": \"Artists upcoming events\",\n        \"type\": \"array\",\n        \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                      \"description\": \"Unique identifier for the event\",\n                      \"type\": \"string\"\n                  },\n                  \"title\": {\n                      \"description\": \"Title of the event\",\n                      \"type\": \"string\"\n                  },\n                  \"venue\": {\n                      \"description\": \"Venue the event is being held at\",\n                      \"type\": \"object\",\n                      \"properties\": {\n                          \"id\": {\n                              \"description\": \"Unique identifier for the venue\",\n                              \"type\": \"string\"\n                          },\n                          \"name\": {\n                              \"description\": \"Name of the venue\",\n                              \"type\": \"string\"\n                          },\n                          \"town\": {\n                              \"description\": \"Town or city where the venue is located\",\n                              \"type\": \"string\"\n                          },\n                          \"location\": {\n                              \"description\": \"Lat/Lon coordinates of the venue\",\n                              \"$ref\": \"http://json-schema.org/geo\"\n                          }\n                      },\n                      \"required\": [\"id\",\"name\",\"location\"]\n                  },\n                  \"startDateTime\": {\n                      \"description\": \"RFC-3339 formatted start date and time the event\",\n                      \"type\": \"string\"\n                  },\n                  \"endDateTime\": {\n                      \"description\": \"RFC-3339 formatted end date and time the event\",\n                      \"type\": \"string\"\n                  }\n\n              },\n              \"required\": [\"id\", \"title\", \"startDateTime\", \"endDateTime\"]\n          }\n      },\n      \"image\": {\n          \"description\": \"Multiple image assets for the artist\",\n          \"type\": \"object\",\n          \"properties\": {\n              \"small\": {\n                  \"description\": \"Small sized image\",\n                  \"type\": \"object\",\n                  \"properties\": {\n                      \"url\": {\n                          \"description\": \"Image source URL\",\n                          \"type\": \"string\"\n                      },\n                      \"width\": {\n                          \"description\": \"Image width\",\n                          \"type\": \"integer\"\n                      },\n                      \"height\": {\n                          \"description\": \"Image height\",\n                          \"type\": \"integer\"\n                      }\n                  },\n                  \"required\": [\"url\", \"width\", \"height\"]\n              },\n              \"medium\": {\n                  \"description\": \"Medium sized image\",\n                  \"type\": \"object\",\n                  \"properties\": {\n                      \"url\": {\n                          \"description\": \"Image source URL\",\n                          \"type\": \"string\"\n                      },\n                      \"width\": {\n                          \"description\": \"Image width\",\n                          \"type\": \"integer\"\n                      },\n                      \"height\": {\n                          \"description\": \"Image height\",\n                          \"type\": \"integer\"\n                      }\n                  },\n                  \"required\": [\"url\", \"width\", \"height\"]\n              },\n              \"large\": {\n                  \"description\": \"Medium sized image\",\n                  \"type\": \"object\",\n                  \"properties\": {\n                      \"url\": {\n                          \"description\": \"Image source URL\",\n                          \"type\": \"string\"\n                      },\n                      \"width\": {\n                          \"description\": \"Image width\",\n                          \"type\": \"integer\"\n                      },\n                      \"height\": {\n                          \"description\": \"Image height\",\n                          \"type\": \"integer\"\n                      }\n                  },\n                  \"required\": [\"url\", \"width\", \"height\"]\n              },\n              \"metadata\": {\n                  \"description\": \"Metadata related to this image\",\n                  \"type\": \"object\",\n                  \"properties\": {\n                      \"copyright\": {\n                          \"description\": \"The copyright holder for this image\",\n                          \"type\": \"string\"\n                      },\n                      \"caption\": {\n                          \"description\": \"Caption text for this image\",\n                          \"type\": \"string\"\n                      }\n                  },\n                  \"required\": [\"copyright\", \"caption\"]\n              }\n          }\n      },\n      \"genre\": {\n          \"description\": \"The genre(s) the artist is found under\",\n          \"type\": \"array\",\n          \"items\": {\n              \"type\": \"string\"\n          }\n      },\n      \"webLink\": {\n          \"description\": \"URL for the web page for the artist on ents24.com\",\n          \"type\": \"string\"\n      }\n  },\n  \"required\": [\"id\", \"name\", \"description\", \"webLink\"]\n}\n"
          schema:
  - name: "Image"
    description: "An artist image retrieved as either a JSON object or JPEG image.\n\n"
    uriTemplate: "/artist/image?id={id}&size={size}&format={format}"
    model:
    parameters:
    actions:
    - name: "Artist Image"
      description:
      method: "GET"
      parameters:
      - name: "id"
        description: "Unique identifier string of the Event you want an image for."
        type: "string"
        required: true
        default:
        example: "oKkO"
        values:
      - name: "size"
        description: "Size of image you want [small, medium, large]."
        type: "string"
        required: false
        default:
        example: "medium"
        values:
      - name: "format"
        description: "The format of the response you want back from the resource [json, jpeg]."
        type: "string"
        required: false
        default:
        example: "json"
        values:
      examples:
      - name:
        description:
        requests:
        - name:
          description:
          headers:
          - name: "Authorization"
            value: "qnFqFAVw8pJMCF1z8tIMYoXwommArRmt9C08jIRA"
          - name: "Cache-Control"
            value: "no-cache"
          body:
          schema:
        responses:
        - name: "200"
          description:
          headers:
          - name: "Content-Type"
            value: "application/json"
          - name: "Date"
            value: "Tue, 26 Aug 2014 08:00:00 GMT"
          - name: "Expires"
            value: "Tue, 26 Aug 2014 09:00:00 GMT"
          - name: "Last-Modified"
            value: "Tue, 25 Aug 2014 22:10:00 GMT"
          - name: "X-Current-Page"
            value: "1"
          - name: "X-Total-Items-Found"
            value: "1"
          - name: "X-Total-Pages"
            value: "1"
          body: "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Artist Image\",\n  \"description\": \"An image asset for an artist\",\n  \"type\": \"object\",\n  \"properties\": {\n      \"url\": {\n          \"description\": \"Image source URL\",\n          \"type\": \"string\"\n      },\n      \"width\": {\n          \"description\": \"Image width\",\n          \"type\": \"integer\"\n      },\n      \"height\": {\n          \"description\": \"Image height\",\n          \"type\": \"integer\"\n      },\n      \"metadata\": {\n          \"description\": \"Metadata related to this image\",\n          \"type\": \"object\",\n          \"properties\": {\n              \"copyright\": {\n                  \"description\": \"The copyright holder for this image\",\n                  \"type\": \"string\"\n              },\n              \"caption\": {\n                  \"description\": \"Caption text for this image\",\n                  \"type\": \"string\"\n              }\n          },\n          \"required\": [\"copyright\", \"caption\"]\n      }\n  },\n  \"required\": [\"url\", \"width\", \"height\", \"metadata\"]\n}\n"
          schema:
- name: "Venue"
  description: "Available actions on the venue resource.\n\n"
  resources:
  - name: "List"
    description: "Multiple venue objects with selected fields.\n\n"
    uriTemplate: "/venue/list?name={name}&location={location}&results_per_page={results_per_page}&page={page}&incl_image={incl_image}&full_description={full_description}&updated_since={updated_since}"
    model:
    parameters:
    actions:
    - name: "Venue List"
      description:
      method: "GET"
      parameters:
      - name: "name"
        description: "The name of a venue."
        type: "string"
        required: false
        default:
        example: "The Fleece"
        values:
      - name: "location"
        description: "The location of venue(s) you want a listing for."
        type: "string"
        required: false
        default:
        example: "bristol"
        values:
      - name: "results_per_page"
        description: "The number of results you want per page/chunk [25, 50, 100]."
        type: "integer"
        required: false
        default:
        example: "25"
        values:
      - name: "page"
        description: "The page/chunk of results to be requested."
        type: "integer"
        required: false
        default:
        example: "1"
        values:
      - name: "incl_image"
        description: "Decides whether or not an artist image is included in the response."
        type: "boolean"
        required: false
        default:
        example: "1"
        values:
      - name: "full_description"
        description: "Decides whether full or summarised description text is included in the response."
        type: "boolean"
        required: false
        default:
        example: "0"
        values:
      - name: "updated_since"
        description: "Only retrive venues that have been added/updated since the given date."
        type: "date"
        required: false
        default:
        example: "YYYY-MM-DD"
        values:
      examples:
      - name:
        description:
        requests:
        - name:
          description:
          headers:
          - name: "Authorization"
            value: "qnFqFAVw8pJMCF1z8tIMYoXwommArRmt9C08jIRA"
          - name: "Cache-Control"
            value: "no-cache"
          body:
          schema:
        responses:
        - name: "200"
          description:
          headers:
          - name: "Content-Type"
            value: "application/json"
          - name: "Date"
            value: "Tue, 26 Aug 2014 08:00:00 GMT"
          - name: "Expires"
            value: "Tue, 26 Aug 2014 09:00:00 GMT"
          - name: "Last-Modified"
            value: "Tue, 25 Aug 2014 22:10:00 GMT"
          - name: "X-Current-Page"
            value: "2"
          - name: "X-Next-Page"
            value: "https://api.ents24.com/event/list?...&page=3"
          - name: "X-Previous-Page"
            value: "https://api.ents24.com/event/list?...&page=1"
          - name: "X-Total-Items-Found"
            value: "75"
          - name: "X-Total-Pages"
            value: "3"
          body: "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Venue Collection\",\n  \"description\": \"A list of Venue objects with selected fields\",\n  \"type\": \"array\",\n  \"items\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"id\": {\n        \"description\": \"Unique identifier for the venue\",\n        \"type\": \"string\"\n      },\n      \"name\": {\n            \"description\": \"Name of the venue\",\n            \"type\": \"string\"\n        },\n      \"town\": {\n        \"description\": \"Town or city where the venue is located\",\n        \"type\": \"string\"\n      },\n          \"county\": {\n              \"description\": \"The county where the venue is located\",\n              \"type\": \"string\"\n          },\n        \"location\": {\n            \"description\": \"Lat/Lon coordinates of the venue\",\n            \"$ref\": \"http://json-schema.org/geo\"\n        },\n        \"description\": {\n          \"description\": \"Description text for the venue\",\n          \"type\": \"string\"\n        },\n        \"image\": {\n              \"description\": \"Single image asset for the venue\",\n              \"type\": \"object\",\n              \"properties\": {\n                  \"url\": {\n                      \"description\": \"Image source URL\",\n                      \"type\": \"string\"\n                  },\n                  \"width\": {\n                      \"description\": \"Image width\",\n                      \"type\": \"integer\"\n                  },\n                  \"height\": {\n                      \"description\": \"Image height\",\n                      \"type\": \"integer\"\n                  },\n                  \"metadata\": {\n                      \"description\": \"Metadata related to this image\",\n                      \"type\": \"object\",\n                      \"properties\": {\n                          \"copyright\": {\n                              \"description\": \"The copyright holder for this image\",\n                              \"type\": \"string\"\n                          },\n                          \"caption\": {\n                              \"description\": \"Caption text for this image\",\n                              \"type\": \"string\"\n                          }\n                      },\n                      \"required\": [\"copyright\", \"caption\"]\n                  }\n              }\n          },\n          \"webLink\": {\n              \"description\": \"URL for the web page for the venue on ents24.com\",\n              \"type\": \"string\"\n          }\n    },\n    \"required\": [\"id\", \"name\", \"location\", \"description\", \"webLink\"]\n  }\n}\n"
          schema:
        - name: "204"
          description:
          headers:
          - name: "Date"
            value: "Tue, 26 Aug 2014 08:00:00 GMT"
          - name: "X-Total-Items-Found"
            value: "0"
          - name: "X-Total-Pages"
            value: "0"
          body:
          schema:
  - name: "Read"
    description: "A venue object with all fields.\n\n"
    uriTemplate: "/venue/read?id={id}&incl_events={incl_events}&incl_images={incl_images}&full_description={full_description}"
    model:
    parameters:
    actions:
    - name: "Venue"
      description:
      method: "GET"
      parameters:
      - name: "id"
        description: "Unique identifier string of the Artist you want full details for."
        type: "string"
        required: true
        default:
        example: "oKkO"
        values:
      - name: "incl_events"
        description: "Decides whether or not a list of events at this venue at is included in the response."
        type: "boolean"
        required: false
        default:
        example: "1"
        values:
      - name: "incl_images"
        description: "Decides whether or not an venue images are included in the response."
        type: "boolean"
        required: false
        default:
        example: "1"
        values:
      - name: "full_description"
        description: "Decides whether full or summarised description text is included in the response."
        type: "boolean"
        required: false
        default:
        example: "1"
        values:
      examples:
      - name:
        description:
        requests:
        - name:
          description:
          headers:
          - name: "Authorization"
            value: "qnFqFAVw8pJMCF1z8tIMYoXwommArRmt9C08jIRA"
          - name: "Cache-Control"
            value: "no-cache"
          body:
          schema:
        responses:
        - name: "200"
          description:
          headers:
          - name: "Content-Type"
            value: "application/json"
          - name: "Date"
            value: "Tue, 26 Aug 2014 08:00:00 GMT"
          - name: "Expires"
            value: "Tue, 26 Aug 2014 09:00:00 GMT"
          - name: "Last-Modified"
            value: "Tue, 25 Aug 2014 22:10:00 GMT"
          - name: "X-Current-Page"
            value: "1"
          - name: "X-Total-Items-Found"
            value: "1"
          - name: "X-Total-Pages"
            value: "1"
          body: "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Venue\",\n  \"description\": \"A single Venue object with all fields\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"description\": \"Unique identifier for the venue\",\n      \"type\": \"string\"\n    },\n    \"name\": {\n          \"description\": \"Name of the venue\",\n          \"type\": \"string\"\n      },\n      \"address\": {\n          \"description\": \"The location details for a venue\",\n          \"type\": \"object\",\n          \"properties\": {\n              \"streetAddress\": {\n                  \"description\": \"The building name/number, street name and district\",\n                  \"type\": \"array\",\n                  \"items\": {\n                      \"type\": \"string\"\n                  },\n                  \"minItems\": 1\n              },\n              \"town\": {\n                  \"description\": \"Town or city where the venue is located\",\n                  \"type\": \"string\"\n              },\n              \"county\": {\n                  \"description\": \"The county where the venue is located\",\n                  \"type\": \"string\"\n              },\n              \"postcode\": {\n                  \"description\": \"Postal code for the venue address\",\n                  \"type\": \"string\"\n              },\n              \"country\": {\n                  \"description\": \"The country where the venue is located\",\n                  \"type\": \"string\"\n              }\n          },\n          \"required\": [\"town\", \"country\"]\n      },\n      \"location\": {\n          \"description\": \"Lat/Lon coordinates of the venue\",\n          \"$ref\": \"http://json-schema.org/geo\"\n      },\n      \"description\": {\n        \"description\": \"Description text for the venue\",\n        \"type\": \"string\"\n      },\n      \"website\": {\n          \"description\": \"URL for the venues website\",\n          \"type\": \"string\"\n      },\n      \"email\": {\n          \"description\": \"Email address for general enquires\",\n          \"type\": \"string\"\n      },\n      \"phone\": {\n          \"description\": \"Phone numbers for the venue\",\n          \"type\": \"object\",\n          \"properties\": {\n              \"enquires\": {\n                  \"description\": \"Phone number for general enquires\",\n                  \"type\": \"string\"\n              },\n              \"booking\": {\n                  \"description\": \"Phone number for bookings\",\n                  \"type\": \"string\"\n              }\n          }\n      },\n      \"events\": {\n        \"description\": \"Upcoming events at the venue\",\n        \"type\": \"array\",\n        \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"description\": \"Unique identifier for an event\",\n                  \"type\": \"string\"\n              },\n              \"title\": {\n                \"description\": \"Title of an event\",\n                  \"type\": \"string\"\n              },\n                  \"startDateTime\": {\n                      \"description\": \"RFC-3339 formatted start date and time the event\",\n                      \"type\": \"string\"\n                  },\n                  \"endDateTime\": {\n                      \"description\": \"RFC-3339 formatted end date and time the event\",\n                      \"type\": \"string\"\n                  }\n              },\n              \"required\": [\"id\",\"title\",\"startDateTime\",\"endDateTime\"]\n          }\n      },\n      \"image\": {\n          \"description\": \"Multiple image assets for the venue\",\n          \"type\": \"object\",\n          \"properties\": {\n              \"small\": {\n                  \"description\": \"Small sized image\",\n                  \"type\": \"object\",\n                  \"properties\": {\n                      \"url\": {\n                          \"description\": \"Image source URL\",\n                          \"type\": \"string\"\n                      },\n                      \"width\": {\n                          \"description\": \"Image width\",\n                          \"type\": \"integer\"\n                      },\n                      \"height\": {\n                          \"description\": \"Image height\",\n                          \"type\": \"integer\"\n                      }\n                  },\n                  \"required\": [\"url\", \"width\", \"height\"]\n              },\n              \"medium\": {\n                  \"description\": \"Medium sized image\",\n                  \"type\": \"object\",\n                  \"properties\": {\n                      \"url\": {\n                          \"description\": \"Image source URL\",\n                          \"type\": \"string\"\n                      },\n                      \"width\": {\n                          \"description\": \"Image width\",\n                          \"type\": \"integer\"\n                      },\n                      \"height\": {\n                          \"description\": \"Image height\",\n                          \"type\": \"integer\"\n                      }\n                  },\n                  \"required\": [\"url\", \"width\", \"height\"]\n              },\n              \"large\": {\n                  \"description\": \"Medium sized image\",\n                  \"type\": \"object\",\n                  \"properties\": {\n                      \"url\": {\n                          \"description\": \"Image source URL\",\n                          \"type\": \"string\"\n                      },\n                      \"width\": {\n                          \"description\": \"Image width\",\n                          \"type\": \"integer\"\n                      },\n                      \"height\": {\n                          \"description\": \"Image height\",\n                          \"type\": \"integer\"\n                      }\n                  },\n                  \"required\": [\"url\", \"width\", \"height\"]\n              },\n              \"metadata\": {\n                  \"description\": \"Metadata related to this image\",\n                  \"type\": \"object\",\n                  \"properties\": {\n                      \"copyright\": {\n                          \"description\": \"The copyright holder for this image\",\n                          \"type\": \"string\"\n                      },\n                      \"caption\": {\n                          \"description\": \"Caption text for this image\",\n                          \"type\": \"string\"\n                      }\n                  },\n                  \"required\": [\"copyright\", \"caption\"]\n              }\n          }\n      },\n      \"webLink\": {\n          \"description\": \"URL for the web page for the venue on ents24.com\",\n          \"type\": \"string\"\n      }\n  },\n  \"required\": [\"id\", \"name\", \"location\", \"description\", \"webLink\"]\n}\n"
          schema:
  - name: "Image"
    description: "A venue image retrieved as either a JSON object or JPEG image.\n\n"
    uriTemplate: "/venue/image?id={id}&size={size}&format={format}"
    model:
    parameters:
    actions:
    - name: "Venue Image"
      description:
      method: "GET"
      parameters:
      - name: "id"
        description: "Unique identifier string of the venue you want an image for."
        type: "string"
        required: true
        default:
        example: "oKkO"
        values:
      - name: "size"
        description: "Size of image you want [small, medium, large]."
        type: "string"
        required: false
        default:
        example: "medium"
        values:
      - name: "format"
        description: "The format of the response you want back from the resource [json, jpeg]."
        type: "string"
        required: false
        default:
        example: "json"
        values:
      examples:
      - name:
        description:
        requests:
        - name:
          description:
          headers:
          - name: "Authorization"
            value: "qnFqFAVw8pJMCF1z8tIMYoXwommArRmt9C08jIRA"
          - name: "Cache-Control"
            value: "no-cache"
          body:
          schema:
        responses:
        - name: "200"
          description:
          headers:
          - name: "Content-Type"
            value: "application/json"
          - name: "Date"
            value: "Tue, 26 Aug 2014 08:00:00 GMT"
          - name: "Expires"
            value: "Tue, 26 Aug 2014 09:00:00 GMT"
          - name: "Last-Modified"
            value: "Tue, 25 Aug 2014 22:10:00 GMT"
          - name: "X-Current-Page"
            value: "1"
          - name: "X-Total-Items-Found"
            value: "1"
          - name: "X-Total-Pages"
            value: "1"
          body: "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Venue Image\",\n  \"description\": \"An image asset for an venue\",\n  \"type\": \"object\",\n  \"properties\": {\n      \"url\": {\n          \"description\": \"Image source URL\",\n          \"type\": \"string\"\n      },\n      \"width\": {\n          \"description\": \"Image width\",\n          \"type\": \"integer\"\n      },\n      \"height\": {\n          \"description\": \"Image height\",\n          \"type\": \"integer\"\n      },\n      \"metadata\": {\n          \"description\": \"Metadata related to this image\",\n          \"type\": \"object\",\n          \"properties\": {\n              \"copyright\": {\n                  \"description\": \"The copyright holder for this image\",\n                  \"type\": \"string\"\n              },\n              \"caption\": {\n                  \"description\": \"Caption text for this image\",\n                  \"type\": \"string\"\n              }\n          },\n          \"required\": [\"copyright\", \"caption\"]\n      }\n  },\n  \"required\": [\"url\", \"width\", \"height\", \"metadata\"]\n}\n"
          schema:
